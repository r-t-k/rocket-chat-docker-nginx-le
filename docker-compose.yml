version: '2'
services:
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Chicago/America
      - URL=chat.kyser.io
      - VALIDATION=http
      - EMAIL=tommy@kyser.io
      - DHLEVEL=2048
      - ONLY_SUBDOMAINS=false
      - STAGING=false
    ports:
      - '443:443'
      - '80:80'
    restart: unless-stopped
    volumes:
      - './nginx:/config'
      - './default/prod.conf:/config/nginx/site-confs/default'
    depends_on:
      - rocketchat
  rocketchat:
    image: rocketchat/rocket.chat:latest
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=https://chat.kyser.io
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://tommy@kyser.io
    #       - HTTP_PROXY=http://proxy.domain.com
    #       - HTTPS_PROXY=http://proxy.domain.com
    depends_on:
      - mongo
    ports:
      - 3000:3000
    labels:
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host: your.domain.tld"

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
      - ./data/db:/data/db
      #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
      - "traefik.enable=false"

    # this container's job is just run the command to initialize the replica set.
    # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
      image: mongo:4.0
      command: >
        bash -c
          "for i in `seq 1 30`; do
            mongo mongo/rocketchat --eval \"
              rs.initiate({
                _id: 'rs0',
                members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
            s=$$? && break || s=$$?;
            echo \"Tried $$i times. Waiting 5 secs...\";
            sleep 5;
          done; (exit $$s)"
      depends_on:
        - mongo

